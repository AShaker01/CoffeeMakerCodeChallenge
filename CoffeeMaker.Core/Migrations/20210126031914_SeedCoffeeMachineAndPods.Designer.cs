// <auto-generated />
using CoffeeMaker.Core.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CoffeeMaker.Core.Migrations
{
    [DbContext(typeof(CoffeeMakerDbContext))]
    [Migration("20210126031914_SeedCoffeeMachineAndPods")]
    partial class SeedCoffeeMachineAndPods
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeeMachineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("MachineSKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("WaterLineCompatible")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("MachineSKU")
                        .IsUnique()
                        .HasFilter("[MachineSKU] IS NOT NULL");

                    b.HasIndex("ModelId");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("tbCoffeeMachine","MC");
                });

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeeMachineModelEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbCoffeeMachineModel","MC");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "BASE_MODEL",
                            Name = "BASE"
                        },
                        new
                        {
                            Id = 2,
                            Code = "DELUXE_MODEL",
                            Name = "DELUXE"
                        },
                        new
                        {
                            Id = 3,
                            Code = "PREMIUM_MODEL",
                            Name = "PREMIUM"
                        });
                });

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeeMachineProductTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbProductType","MC");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "COFFEE_MACHINE_LARGE",
                            Name = "COFFEE MACHINE LARGE"
                        },
                        new
                        {
                            Id = 2,
                            Code = "COFFEE_MACHINE_SMALL",
                            Name = "COFFEE MACHINE SMALL"
                        },
                        new
                        {
                            Id = 3,
                            Code = "ESPRESSO_MACHINE",
                            Name = "ESPRESSO MACHINE"
                        });
                });

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeePodEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FlavorId")
                        .HasColumnType("int");

                    b.Property<int>("PackSizeId")
                        .HasColumnType("int");

                    b.Property<string>("PodSKU")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FlavorId");

                    b.HasIndex("PackSizeId");

                    b.HasIndex("PodSKU")
                        .IsUnique()
                        .HasFilter("[PodSKU] IS NOT NULL");

                    b.HasIndex("ProductTypeId");

                    b.ToTable("tbCoffeePod","CP");
                });

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeePodFlavorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbCoffeeFlavor","CP");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "COFFEE_FLAVOR_VANILLA",
                            Name = "COFFEE FLAVOR VANILLA"
                        },
                        new
                        {
                            Id = 2,
                            Code = "COFFEE_FLAVOR_CARAMEL",
                            Name = "COFFEE FLAVOR_CARAMEL"
                        },
                        new
                        {
                            Id = 3,
                            Code = "COFFEE_FLAVOR_PSL",
                            Name = "COFFEE FLAVOR PSL"
                        },
                        new
                        {
                            Id = 4,
                            Code = "COFFEE_FLAVOR_MOCHA",
                            Name = "COFFEE_FLAVOR_MOCHA"
                        },
                        new
                        {
                            Id = 5,
                            Code = "COFFEE_FLAVOR_HAZELNUT",
                            Name = "COFFEE FLAVOR HAZELNUT"
                        });
                });

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeePodPackSizeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbCoffeePodPackSize","CP");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "DOZEN_1",
                            Name = "1 dozen (12)"
                        },
                        new
                        {
                            Id = 2,
                            Code = "DOZEN_3",
                            Name = "3 dozen (36)"
                        },
                        new
                        {
                            Id = 3,
                            Code = "DOZEN_5",
                            Name = "5 dozen (60)"
                        },
                        new
                        {
                            Id = 4,
                            Code = "DOZEN_7",
                            Name = "7 dozen (84)"
                        });
                });

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeePodProductTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tbProductType","CP");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "COFFEE_POD_LARGE",
                            Name = "COFFEE POD LARGE"
                        },
                        new
                        {
                            Id = 2,
                            Code = "COFFEE_POD_SMALL",
                            Name = "COFFEE POD SMALL"
                        },
                        new
                        {
                            Id = 3,
                            Code = "ESPRESSO_POD",
                            Name = "ESPRESSO POD"
                        });
                });

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeeMachineEntity", b =>
                {
                    b.HasOne("CoffeeMaker.Core.DomainModels.CoffeeMachineModelEntity", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeMaker.Core.DomainModels.CoffeeMachineProductTypeEntity", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CoffeeMaker.Core.DomainModels.CoffeePodEntity", b =>
                {
                    b.HasOne("CoffeeMaker.Core.DomainModels.CoffeePodFlavorEntity", "Flavor")
                        .WithMany()
                        .HasForeignKey("FlavorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeMaker.Core.DomainModels.CoffeePodPackSizeEntity", "PackSize")
                        .WithMany()
                        .HasForeignKey("PackSizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeMaker.Core.DomainModels.CoffeePodProductTypeEntity", "ProductType")
                        .WithMany()
                        .HasForeignKey("ProductTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
